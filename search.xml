<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git基本操作</title>
    <url>/2019/12/26/git-basic-use/</url>
    <content><![CDATA[<h2 id="1-初始化本地项目"><a href="#1-初始化本地项目" class="headerlink" title="1.初始化本地项目"></a>1.初始化本地项目</h2><pre><code>1.现在本地新建一个文档，比如：D:\gitproject
2.进入D:\gitproject目录下，右键选择git bash进入git命令模式
3.git init初始化一个git项目
</code></pre><h2 id="2-从远端仓库克隆一个项目到本地"><a href="#2-从远端仓库克隆一个项目到本地" class="headerlink" title="2.从远端仓库克隆一个项目到本地"></a>2.从远端仓库克隆一个项目到本地</h2><p>   从远端仓库克隆项目到本地，如D:\gitproject\目录下，命令：<br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone github地址</span><br></pre></td></tr></table></figure><br><a id="more"></a> </p>
<h2 id="3-绑定远程仓库："><a href="#3-绑定远程仓库：" class="headerlink" title="3.绑定远程仓库："></a>3.绑定远程仓库：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin github地址</span><br></pre></td></tr></table></figure>
<h2 id="4-新建分支并进入分支进行操作"><a href="#4-新建分支并进入分支进行操作" class="headerlink" title="4.新建分支并进入分支进行操作"></a>4.新建分支并进入分支进行操作</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch 分支名</span><br><span class="line">git checkout 分支名</span><br></pre></td></tr></table></figure>
<p>也可以直接用:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure></p>
<h2 id="5-创建本地分支与远端分支的关联"><a href="#5-创建本地分支与远端分支的关联" class="headerlink" title="5.创建本地分支与远端分支的关联"></a>5.创建本地分支与远端分支的关联</h2><p>要创建本地的哪个分支与远端分支关联，切换到哪个分支<br>比如创建本地xinyun分支与远端xinyun分支关联</p>
<ul>
<li>首先 git checkout xinyun</li>
<li>然后 git branch —set-upstream-to=origin/remote_branch  your_branch</li>
</ul>
<h2 id="6-创建关联之后的开发中每次更新"><a href="#6-创建关联之后的开发中每次更新" class="headerlink" title="6.创建关联之后的开发中每次更新"></a>6.创建关联之后的开发中每次更新</h2><p>首先将远端的仓库pull到本地，有修改之后再push到远端去<br>比如我要先将远端master pull到本地master，再合并master到本地xinyun<br>进行了修改操作之后再将xinyun分支push到远端xinyun分支<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git pull origin master</span><br><span class="line">git merge xinyun</span><br><span class="line">git branch checkout xinyun</span><br></pre></td></tr></table></figure></p>
<h2 id="7-更新"><a href="#7-更新" class="headerlink" title="7.更新"></a>7.更新</h2><p>一系列更新，比如新增或者修改了文件readme.txt</p>
<ul>
<li>需要先添加：git add readme.txt</li>
<li>再提交：git commit -m “新增或者修改了文件readme.txt”</li>
<li>最后push：git push origin xinyun:xinyun</li>
<li>或者使用git add -u来添加修改的文件或删除的文件到缓存区</li>
</ul>
<p><strong>扩展：</strong><br>git add -u：将文件的修改、文件的删除，添加到暂存区。<br>git add .：将文件的修改，文件的新建，添加到暂存区。<br>git add -A：将文件的修改，文件的删除，文件的新建，添加到暂存区。</p>
<h2 id="8-如果本地分支与远端分支进行了关联"><a href="#8-如果本地分支与远端分支进行了关联" class="headerlink" title="8.如果本地分支与远端分支进行了关联"></a>8.如果本地分支与远端分支进行了关联</h2><p>pull和push操作可以简化<br>git pull<br>git push</p>
<h2 id="9-删除远程分支"><a href="#9-删除远程分支" class="headerlink" title="9.删除远程分支"></a>9.删除远程分支</h2><p>   git push origin —delete <remote-branchname><br>   或者<br>   git push origin :<remote-branchname></p>
<h2 id="10-删除本地分支"><a href="#10-删除本地分支" class="headerlink" title="10.删除本地分支"></a>10.删除本地分支</h2><p>切换到其他分支<br>git branch -D branch-name(to be deleted)</p>
<h2 id="11-重命名本地分支"><a href="#11-重命名本地分支" class="headerlink" title="11.重命名本地分支"></a>11.重命名本地分支</h2><p>   git branch -m <new-branch-name></p>
<h2 id="12-拉取远程分支"><a href="#12-拉取远程分支" class="headerlink" title="12.拉取远程分支"></a>12.拉取远程分支</h2><ul>
<li>git checkout -b 本地branch-name origin/远端branch-name</li>
<li>git pull origin 远端branch-name</li>
</ul>
<h2 id="13-克隆远端项目指定分支"><a href="#13-克隆远端项目指定分支" class="headerlink" title="13.克隆远端项目指定分支"></a>13.克隆远端项目指定分支</h2><p>git clone -b &lt;远程指定分支&gt; &lt;远程仓库地址&gt; &lt;本地文件夹名&gt;<br>如果不指定本地文件夹，则默认克隆到当前目录下。</p>
<h2 id="14-查看与本地仓库关联的远端仓库"><a href="#14-查看与本地仓库关联的远端仓库" class="headerlink" title="14.查看与本地仓库关联的远端仓库"></a>14.查看与本地仓库关联的远端仓库</h2><p>git remote —v</p>
<h2 id="15-换行符问题-统一linux风格"><a href="#15-换行符问题-统一linux风格" class="headerlink" title="15.换行符问题,统一linux风格"></a>15.换行符问题,统一linux风格</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">提交&#x2F;检出 不转换</span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line"> </span><br><span class="line">拒绝提交包含混合换行符的文件</span><br><span class="line">git config --global core.safecrlf true</span><br><span class="line"> </span><br><span class="line">设置区分大小写</span><br><span class="line">git config --global core.ignorecase false</span><br></pre></td></tr></table></figure>
<h2 id="16-新手使用git协同开发需注意"><a href="#16-新手使用git协同开发需注意" class="headerlink" title="16.新手使用git协同开发需注意"></a>16.新手使用git协同开发需注意</h2><p>每次更新代码之前，先pull远端的仓库代码，之后再在本地更新代码。</p>
]]></content>
      <categories>
        <category>git</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建个人博客（备份和迁移）</title>
    <url>/2018/12/03/hexo-build-blog(backup)/</url>
    <content><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>一般情况下，我们博客的相关配置信息都是在本地操作的, 但是当我们更换了设备或者电脑出现故障了等，那么我们便无法再维护我们的博客了。因而为了保护我们的劳动成果以及将来能更方便的维护博客，我们需要对博客进行备份和迁移，也就是将博客的相关配置信息上传到github上进行托管。日后有必要的时候可以从github上克隆到本地进行博客的维护等操作。<br><a id="more"></a> </p>
<h1 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h1><p>在搭建博客的时候，我们已经将博客部署到了github上去，其实部署上去只是生成的静态文件。因而还需要将hexo生成的网站源文件也push到github上。这个时候需要再github上创建分支，其中主分支master已经存放了生成的静态网页。</p>
<h1 id="三、处理流程"><a href="#三、处理流程" class="headerlink" title="三、处理流程"></a>三、处理流程</h1><h2 id="1-预处理"><a href="#1-预处理" class="headerlink" title="1.预处理"></a>1.预处理</h2><p>将hexo的主题下的.git删除，比如删除themes/next/目录下的.git否则无法将主题文件夹push。<br>在本地D:blog文件夹下创建文件.gitignore，正常情况这个文件是自动生成的，打开后写入：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br></pre></td></tr></table></figure><br>这个文件的存在是指在push的时候忽略文件中的文件格式。</p>
<h2 id="2-创建本地分支"><a href="#2-创建本地分支" class="headerlink" title="2.创建本地分支"></a>2.创建本地分支</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#git初始化</span><br><span class="line">git init</span><br><span class="line">#创建hexo分支，用来存放源码</span><br><span class="line">git checkout -b hexo</span><br><span class="line">#git 文件添加</span><br><span class="line">git add .</span><br><span class="line">#git 提交</span><br><span class="line">git commit -m &quot;backup&quot;</span><br><span class="line">#添加远程仓库，github上的博客仓库</span><br><span class="line">git remote add origin git@github.com:xinyunduan&#x2F;xinyunduan.github.io.git</span><br><span class="line">#push到hexo分支</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>
<p>至此，远端就有了有两个分支，master和hexo</p>
<h2 id="3-执行部署"><a href="#3-执行部署" class="headerlink" title="3.执行部署"></a>3.执行部署</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<h1 id="四、恢复或多终端操作"><a href="#四、恢复或多终端操作" class="headerlink" title="四、恢复或多终端操作"></a>四、恢复或多终端操作</h1><p>1、确定一个存放博客的文件夹，直接拉取远端的hexo分支<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># git clone -b &lt;远程指定分支&gt; &lt;远程仓库地址&gt; &lt;本地文件夹名&gt;</span><br><span class="line">git clone -b hexo git@github.com:xinyunduan&#x2F;xinyunduan.github.io.git .&#x2F;blog</span><br></pre></td></tr></table></figure><br>将hexo分支克隆到本地文件夹blog下。</p>
<p>如果新环境没有安装git、node.js等环境，则还需要自行安装git、node.js，配置git与github绑定行管操作，这里不再赘述。<br>2、安装hexo依赖<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm instal</span><br></pre></td></tr></table></figure></p>
<h1 id="五、更新博客"><a href="#五、更新博客" class="headerlink" title="五、更新博客"></a>五、更新博客</h1><p>每次操作完之后，最好再重新部署和备份<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d #生成网站并部署到GitHub上</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#39;update&#39;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建个人博客（next主题优化）</title>
    <url>/2018/12/01/hexo-build-blog(next-design%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1-文章创建、更新和删除"><a href="#1-文章创建、更新和删除" class="headerlink" title="1.文章创建、更新和删除"></a>1.文章创建、更新和删除</h1><ul>
<li><p>创建文章<br>首先需要进入你的博客的根目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;博客标题&quot;</span><br></pre></td></tr></table></figure>
<p>之后会在/source/_posts/目录下生成“博客标题.md”文件，然后就可以在该文件中采用markdown的方式写作。.md文件头部会自动生成title和date，如果要对文章进行标签和类别分类的需要手动加上。如下：</p>
<a id="more"></a> 
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo搭建个人博客（next主题优化）</span><br><span class="line">date: 2018-12-19:02:13</span><br><span class="line">tags: </span><br><span class="line">  - hexo</span><br><span class="line">  - next</span><br><span class="line">categories: 工具</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>分类和标签的主要事项请参看<a href="https://hexo.io/zh-cn/docs/front-matter.html#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE" target="_blank" rel="noopener">官网</a></p>
</li>
<li><p>修改文章<br>修改文章简单，只需在/source/_posts/目录下找到对应的.md文件进行编辑就可以。</p>
</li>
<li>删除文章<br>删除文件简单，只需在/source/_posts/目录下找到对应的.md文件删除就可以。</li>
</ul>
<p><strong>注意：</strong>每次操作需要清除静态文件缓存再重新生成静态文件即可。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></p>
<h1 id="2-主题自带样式"><a href="#2-主题自带样式" class="headerlink" title="2.主题自带样式"></a>2.主题自带样式</h1><ul>
<li>tabs标签<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs 选项卡, 2 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 1** </span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 2**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 3** </span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
效果如下：<div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">选项卡 1</a></li><li class="tab active"><a href="#选项卡-2">选项卡 2</a></li><li class="tab"><a href="#选项卡-3">选项卡 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p><strong>这是选项卡 1</strong> </p></div><div class="tab-pane active" id="选项卡-2"><p><strong>这是选项卡 2</strong></p></div><div class="tab-pane" id="选项卡-3"><p><strong>这是选项卡 3</strong> </p></div></div></div>
</li>
</ul>
<p>首先可以在主题配置文件中有配置，需要配置下，贴上我的：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Tabs tag.</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: true</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br></pre></td></tr></table></figure><br>  然后上面源码中, 2表示一开始在第二个选项卡，非必须，若数值为-1则隐藏选项卡内容。更多用法请查看<a href="https://theme-next.org/docs/tag-plugins/tabs" target="_blank" rel="noopener">官方文档</a></p>
<ul>
<li>label标签<br>在主题配置文件中找到label tag，然后设置为true<br>代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label default@默认 %&#125;</span><br><span class="line">&#123;% label primary@主要 %&#125;</span><br><span class="line">&#123;% label success@成功 %&#125;</span><br><span class="line">&#123;% label info@信息 %&#125;</span><br><span class="line">&#123;% label warning@警告 %&#125;</span><br><span class="line">&#123;% label danger@危险 %&#125;</span><br></pre></td></tr></table></figure>
效果如下：<span class="label default">默认</span>
<span class="label primary">主要</span>
<span class="label success">成功</span>
<span class="label info">信息</span>
<span class="label warning">警告</span> 
<span class="label danger">危险</span>
</li>
</ul>
<h1 id="3-添加文章评论功能"><a href="#3-添加文章评论功能" class="headerlink" title="3.添加文章评论功能"></a>3.添加文章评论功能</h1><p>博客评论功能采用的韩国的Livere(来必力)</p>
<ol>
<li>准备<ul>
<li>去Livere官网免费注册账号，选择city版安装</li>
<li>进入管理页面 -&gt; 代码管理 -&gt; 一般网站，复制data-uid（用于粘贴到主题配置文件里）</li>
<li>进入管理页面 -&gt; 设置 -&gt; 将个人博客的域名复制到网站的URL里<br><a href="https://livere.com/" target="_blank" rel="noopener">Livere官网</a></li>
</ul>
</li>
<li>主题配置文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Support for LiveRe comments system.评论管理</span><br><span class="line"># You can get your uid from https:&#x2F;&#x2F;livere.com&#x2F;insight&#x2F;myCode (General web site)</span><br><span class="line">livere_uid: data-id(来自Livere的data-id)</span><br></pre></td></tr></table></figure>
<strong>注意：</strong>如果设置了其他的评论管理，请注释掉保留一个就行。</li>
</ol>
<h1 id="4-文章元数据"><a href="#4-文章元数据" class="headerlink" title="4.文章元数据"></a>4.文章元数据</h1><ol>
<li>每一篇文章标题下的写作时间、更新时间等信息。在主题配置文件里设置。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at:</span><br><span class="line">    enable: true</span><br><span class="line">    another_day: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure></li>
<li><p>添加文章字数与阅读时长统计</p>
<div class="tabs" id="步骤"><ul class="nav-tabs"><li class="tab active"><a href="#步骤-1">步骤 1</a></li><li class="tab"><a href="#步骤-2">步骤 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="步骤-1"><p>安装插件：hexo-symbols-count-time</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="步骤-2"><p>主题站点配置文件中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br></pre></td></tr></table></figure></div></div></div>
</li>
<li><p>添加阅读量统计<br> busuanzi统计功能, 打开主题配置文件，找到代码所在位置进行修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true #网站总访客数量</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true #网站的文章总阅读数</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true #单篇文章的阅读数</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>
<p>其他参考:<a href="https://www.jianshu.com/p/f2ec7eea543d" target="_blank" rel="noopener">https://www.jianshu.com/p/f2ec7eea543d</a></p>
</li>
</ol>
<h1 id="5-添加右上角forke-me-on-github"><a href="#5-添加右上角forke-me-on-github" class="headerlink" title="5.添加右上角forke-me-on-github"></a>5.添加右上角forke-me-on-github</h1><p>打开代码所在位置进行修改<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#96;Follow me on GitHub&#96; banner in the top-right corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https:&#x2F;&#x2F;github.com&#x2F;xinyunduan</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure></p>
<h1 id="6-添加代码块复制功能"><a href="#6-添加代码块复制功能" class="headerlink" title="6.添加代码块复制功能"></a>6.添加代码块复制功能</h1><p>在对文章插入的代码块，如果有一个一键复制的功能会使操作更加友好。<br>找到代码所在位置进行修改<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme</span><br><span class="line">  highlight_theme: normal</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true #代码复制</span><br><span class="line">    # Show text copy result.</span><br><span class="line">    show_result: true #代码复制成功标识</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style:</span><br></pre></td></tr></table></figure></p>
<h1 id="7-修改文章内链接文本样式"><a href="#7-修改文章内链接文本样式" class="headerlink" title="7.修改文章内链接文本样式"></a>7.修改文章内链接文本样式</h1><p>修改/themes/next/source/css/_common/components/post/post.styl，在末尾添加CSS样式：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3; &#x2F;&#x2F;原始链接颜色</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3; &#x2F;&#x2F;底部分割线颜色</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423; &#x2F;&#x2F;鼠标经过颜色</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423; &#x2F;&#x2F;底部分割线颜色</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="8-修改标签图标"><a href="#8-修改标签图标" class="headerlink" title="8.修改标签图标"></a>8.修改标签图标</h1><p>修改文章底部的标签的图标，打开主题配置文件，找到tag_icon设为true<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span><br><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure></p>
<h1 id="9-修改网站底部样式"><a href="#9-修改网站底部样式" class="headerlink" title="9.修改网站底部样式"></a>9.修改网站底部样式</h1><p>添加时间起始日期，以及修改icon样式和颜色<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup. If not defined, current year will be used.</span><br><span class="line">  since: 2015</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in Font Awesome. See: https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons&#x2F;</span><br><span class="line">    # &#96;heart&#96; is recommended with animation in red (#ff0000).</span><br><span class="line">    name: heart</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: false</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: &quot;#ff0033&quot; #红色</span><br></pre></td></tr></table></figure></p>
<h1 id="10-在文章末尾添加“文章结束”标记"><a href="#10-在文章末尾添加“文章结束”标记" class="headerlink" title="10.在文章末尾添加“文章结束”标记"></a>10.在文章末尾添加“文章结束”标记</h1><ul>
<li>在根本目下~/source/文件夹下创建新的文件夹_data<br>新建文件passage-end-tag.swig，添加如下内容：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 文件结束语--&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line"> &#123;% if not is_index %&#125;</span><br><span class="line">     &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&amp;nbsp;&amp;nbsp&lt;i class&#x3D;&quot;fa fa-heart&quot;&gt;&lt;&#x2F;i&gt;&amp;nbsp;&amp;nbsp感谢您的阅读-------------&lt;&#x2F;div&gt;</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>打开主题配置文件，在末尾添加如下代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h1 id="11-使用-hexo-neat-插件压缩页面资源"><a href="#11-使用-hexo-neat-插件压缩页面资源" class="headerlink" title="11.使用 hexo-neat 插件压缩页面资源"></a>11.使用 hexo-neat 插件压缩页面资源</h1><p>  1.像安装其它插件一样，在站点的根目录 npm 安装插件：<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-neat --save</span><br></pre></td></tr></table></figure><br>  2.添加相关配置到站点配置文件：<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文件压缩，设置一些需要跳过的文件 </span><br><span class="line"># hexo-neat</span><br><span class="line"> neat_enable: true</span><br><span class="line"># 压缩 html</span><br><span class="line"> neat_html:</span><br><span class="line"> enable: true</span><br><span class="line"># 一些百度、Google 的验证文件需要排除掉</span><br><span class="line"> exclude:</span><br><span class="line">    - &#39;**&#x2F;baidu*.html&#39;</span><br><span class="line">    - &#39;**&#x2F;google*.html&#39;</span><br><span class="line"># 压缩 css</span><br><span class="line"> neat_css:</span><br><span class="line">    enable: true</span><br><span class="line">    exclude:</span><br><span class="line">      - &#39;**&#x2F;*.min.css&#39;</span><br><span class="line"># 压缩 js</span><br><span class="line"> neat_js:</span><br><span class="line">    enable: true</span><br><span class="line">    mangle: true</span><br><span class="line">    output:</span><br><span class="line">    compress:</span><br><span class="line">    exclude:</span><br><span class="line">      - &#39;**&#x2F;*.min.js&#39;</span><br><span class="line">      - &#39;**&#x2F;jquery.fancybox.pack.js&#39;</span><br><span class="line">      - &#39;**&#x2F;index.js&#39;</span><br></pre></td></tr></table></figure><br>  3.再执行 hexo g 命令生成 public 目录文件时，会发现控制台有输出压缩日志</p>
<h1 id="12-添加版权信息"><a href="#12-添加版权信息" class="headerlink" title="12.添加版权信息"></a>12.添加版权信息</h1><p>打开主题配置文件，找到creative_commons的位置将post设置为true。<br>此处的版权声明可以选择在侧栏和文章的末尾两处显示。在侧栏显示版权声明我觉得有些突兀，所以我选择在文章末尾显示。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># See: https:&#x2F;&#x2F;creativecommons.org&#x2F;share-your-work&#x2F;licensing-types-examples</span><br><span class="line"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class="line"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https:&#x2F;&#x2F;creativecommons.org</span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure></p>
<h1 id="13-返回顶部"><a href="#13-返回顶部" class="headerlink" title="13.返回顶部"></a>13.返回顶部</h1><p>你可以设定返回顶部按钮的位置和是否显示当前浏览位置的百分比。返回顶部按钮默认显示在页脚，如果你使用的是 Pisces 或者 Gemini 主题，设定 sidebar: true，则可显示在侧栏的底部。打开主题配置文件，找到back2top的位置按需设置：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure></p>
<h1 id="14-设置阅读进度条"><a href="#14-设置阅读进度条" class="headerlink" title="14.设置阅读进度条"></a>14.设置阅读进度条</h1><p>在页面顶部或底部边缘位置显示一个阅读进程的进度条，你可以自定义进度条的颜色和粗细。打开主题配置文件找到Reading progress bar位置进行设置。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Reading progress bar</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  position: top</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure></p>
<h1 id="15-添加书签"><a href="#15-添加书签" class="headerlink" title="15.添加书签"></a>15.添加书签</h1><p>在页面右上角添加一个书签图标，可以记录你阅读每一篇文章的位置，在你下次浏览该页面的时候，直接跳转到上一次浏览到的位置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Bookmark Support</span><br><span class="line">bookmark:</span><br><span class="line">  enable: true</span><br><span class="line">  # Customize the color of the bookmark.</span><br><span class="line">  color: &quot;#222&quot;</span><br><span class="line">  # If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span><br><span class="line">  # If manual, only save it by clicking the bookmark-icon.</span><br><span class="line">  save: auto</span><br></pre></td></tr></table></figure></p>
<h1 id="16-首页文章摘要"><a href="#16-首页文章摘要" class="headerlink" title="16.首页文章摘要"></a>16.首页文章摘要</h1><p>next主题默认全部展开的，阅读体验很不好，最佳的阅读体验应该是，在首页只能看到这篇文章的摘要，只有点击该篇文章才可阅读全文。这一部分的配置就是实现该功能的。相关设置在主题配置文件中。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: true</span><br><span class="line"></span><br><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure></p>
<h1 id="17-添加相关文章"><a href="#17-添加相关文章" class="headerlink" title="17.添加相关文章"></a>17.添加相关文章</h1><p>在文章的末尾添加相关（推荐）文章</p>
<ul>
<li><p>安装插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts –save</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加脚本<br>在/themes/next/layout/_macro/post.swig文件里添加代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123; popular_posts( &#123;&#125; , post ) &#125;&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>bug：</strong> 无法设置标题且取消在首页显示相关阅读</p>
<h1 id="18-添加数学公式的支持"><a href="#18-添加数学公式的支持" class="headerlink" title="18.添加数学公式的支持"></a>18.添加数学公式的支持</h1><p>持 MathJax 和 KaTeX 两种加载数学公式的方法，使用语法都是 LaTeX 语法。不过 MathJax 的功能比较全面，KaTeX 的加载速度比较快。z这里选择了MathJax, 默认的 per_page: true 的意思是，只有当你在文章设定中添加 mathjax: ture，才会在当前页面中加载公式渲染，所以如果要显示公式一定要在文章的开头添加。<br>安装插件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm uninstall hexo-renderer-marked --save</span><br><span class="line">cnpm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><br>在主题配置文件中设置：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Math Formulas Render Support</span><br><span class="line">math:</span><br><span class="line">  # Default (true) will load mathjax &#x2F; katex script on demand.</span><br><span class="line">  # That is it only render those page which has &#96;mathjax: true&#96; in Front-matter.</span><br><span class="line">  # If you set it to false, it will load mathjax &#x2F; katex srcipt EVERY PAGE.</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line">  # hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br><span class="line">    # See: https:&#x2F;&#x2F;mhchem.github.io&#x2F;MathJax-mhchem&#x2F;</span><br><span class="line">    mhchem: true</span><br></pre></td></tr></table></figure></p>
<h1 id="19-添加背景图片"><a href="#19-添加背景图片" class="headerlink" title="19.添加背景图片"></a>19.添加背景图片</h1><ul>
<li><p>在根目录路径~/source/_data创建/修改 styles.styl文件，并添加以下内容:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 添加背景图片</span><br><span class="line">body &#123;</span><br><span class="line">      background: url(&#x2F;images&#x2F;bg.jpg);&#x2F;&#x2F;自己喜欢的图片地址</span><br><span class="line">      background-size: cover;</span><br><span class="line">      background-repeat: no-repeat;</span><br><span class="line">      background-attachment: fixed;</span><br><span class="line">      background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 标题栏背景</span><br><span class="line">.site-meta &#123;</span><br><span class="line">    padding: 20px 0;</span><br><span class="line">    color: #fff;</span><br><span class="line">    &#x2F;&#x2F;background: $blue;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">    background-size:cover;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 修改主体透明度</span><br><span class="line">.main-inner&#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    opacity: 0.95;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="20-添加背景音乐"><a href="#20-添加背景音乐" class="headerlink" title="20.添加背景音乐"></a>20.添加背景音乐</h1><ul>
<li>生成网易云音乐外链<br>使用网络版网易云音乐，在播放界面点击生成外链，复制相关代码:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;330 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;357384&amp;auto&#x3D;1&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure></li>
<li>添加代码到sidebar.swig<br>打开themes/next/layout/_macro/sidebar.swig 文件添加如下代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.background_music %&#125;</span><br><span class="line">   &lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;330 height&#x3D;86 src&#x3D;&quot;&#123;&#123; theme.background_music &#125;&#125;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
位置放在&lt;/aside&gt;上面，你也可以选择其他位置。</li>
<li>在主题配置文件添加代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 添加背景音乐</span><br><span class="line">background_music: &#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;357384&amp;auto&#x3D;1&amp;height&#x3D;66</span><br></pre></td></tr></table></figure>
后记：<br>主题next的新版本很多功能都集成到了next里面，只需要在主题配置文件里进行相关设置就可以，对比老版本，很多都需要写js脚本来实现。</li>
</ul>
<p>参考：<a href="https://blog.csdn.net/weixin_42905141/article/details/102677424" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42905141/article/details/102677424</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建个人博客（next主题基础配置）</title>
    <url>/2018/11/25/hexo-build-blog(next-config)/</url>
    <content><![CDATA[<p>过上一步的努力，我们终于搭建好了一个属于自己的博客框架，并且还安装了next主题，但是博客的结构还比较捡漏，接下来我们需要把她美化一下，本文主要是针对next主题的美化。进入到hexo生成的博客目录，如D:blog/， <strong>所有的hexo命令都是在该路径下执行</strong><br>hexo的站点配置详解<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">官方配置说明</a><br><a id="more"></a> </p>
<h1 id="一、添加基本信息"><a href="#一、添加基本信息" class="headerlink" title="一、添加基本信息"></a>一、添加基本信息</h1><p>基本信息主要包括博客标题、副标题、博客描述、作者姓名、头像等。<br>打开站点配置文件_config.yml，对着官网的参数详解根绝个人喜好添加信息。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 咸鱼翻身</span><br><span class="line">subtitle: Viva La Vida</span><br><span class="line">description: Brainy is the new sexy</span><br><span class="line">keywords:</span><br><span class="line">author: Duan Xinyun</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure></p>
<h1 id="二、next主题的样式选择与配置"><a href="#二、next主题的样式选择与配置" class="headerlink" title="二、next主题的样式选择与配置"></a>二、next主题的样式选择与配置</h1><p>打开themes/next/目录下的主题配置文件_config.yml，<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">next官方配置说明</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><br>选择next的样式，只能选择其中一个样式，选中哪一个样式就删除前面的注释符号（#），不用的就注释掉。</p>
<h1 id="三、菜单设置"><a href="#三、菜单设置" class="headerlink" title="三、菜单设置"></a>三、菜单设置</h1><h2 id="1-添加菜单"><a href="#1-添加菜单" class="headerlink" title="1.添加菜单"></a>1.添加菜单</h2><p>打开themes/next/目录下的主题配置文件_config.yml，<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">next官方配置说明</a><br>菜单包括：首页、归档、分类、标签、关于等。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#主菜单</span><br><span class="line">## 添加菜单</span><br><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home  #首页</span><br><span class="line">  #about: &#x2F;about&#x2F; || user #关于</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags  #标签</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th #分类</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive #归档</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable&#x2F;Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><br>这里选择了home(首页)、tags(标签)、cateigories（分类）、归档（archives)，menu_icons设置为true的话，会显示对应的图标。关于显示的文本可以选择对应的languange去themes/next/languanges下参考和修改，比如我们在站点配置文件中的languange配置的是zh-Hans，对应的找到themes/next/languages/zh-CN.yml中参考或修改。<br><strong>注意这里可能存在的坑</strong>：先针对修改的内容预览一下，运行下面的代码，打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br>如果首页、标签等不能正确跳转，将斜杆后面的空格去掉。这个应该是主题版本的问题，注意使用v6版本以上next主题。<br>原始：home: / || home<br>修改：home: /|| home<br>其他同理。<br>再预览试试应该没问题了，这里的空格貌似被非法转义了。如果没有遇到上述问题请忽略！</p>
<h2 id="2-添加类别模块"><a href="#2-添加类别模块" class="headerlink" title="2.添加类别模块"></a>2.添加类别模块</h2><p>如果在菜单配置中选择了categories，那么为了使文章能够正确映射到对应的类别，需要新建一个分类页面。每次添加一个新的页面即hexo new page “page name”，都会在./source/页面下生成一个对应文件夹，文件下面有个一个markwdowm文件index.md，需要指定type。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><br>这时在source文件夹下生成了categorcies/index.md，打开index.md进行设置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-12-24 21:41:35</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">commnets: false</span><br><span class="line">categories:</span><br><span class="line">    - 工具</span><br><span class="line">    - python</span><br><span class="line">    - 机器学习</span><br><span class="line">    - 深度学习</span><br><span class="line">    - 数据挖掘</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>指定类型为categories，并设置了工具、python、机器学习、深度学习、数据挖掘等几个类别。注意添加categories的格式，另外一种是[类别1，类别2,…..]。</p>
<h2 id="3-添加分类模块"><a href="#3-添加分类模块" class="headerlink" title="3.添加分类模块"></a>3.添加分类模块</h2><p>如果在菜单配置中选择了tag，那么为了使文章能够正确映射到对应的标签，需要新建一个标签页面。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><br>这时在source文件夹下生成了tags/index.md，打开index.md进行设置,最重要的是要指定type:”tags”，否则博客网站点击标签菜单会提示找不到标签，其他menu类似。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-12-24 20:46:35</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">tags:</span><br><span class="line">    - hexo</span><br><span class="line">    - Linux</span><br><span class="line">    - python</span><br><span class="line">    - 机器学习</span><br><span class="line">    - 数据结构与算法</span><br><span class="line">    - 深度学习</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>指定类型为tags，并设置了hexo、Linux、python、机器学习、数据结构与算法、深度学习等几个标签。</p>
<h1 id="四、侧边栏格式设置"><a href="#四、侧边栏格式设置" class="headerlink" title="四、侧边栏格式设置"></a>四、侧边栏格式设置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  position: left        &#x2F;&#x2F;靠左放置</span><br><span class="line">  #position: right      &#x2F;&#x2F;靠右放置</span><br><span class="line"></span><br><span class="line"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span><br><span class="line">  display: post        &#x2F;&#x2F;默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  #display: always       &#x2F;&#x2F;在所有页面中都显示</span><br><span class="line">  #display: hide        &#x2F;&#x2F;在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #display: remove      &#x2F;&#x2F;完全移除</span><br><span class="line"></span><br><span class="line">  offset: 12            &#x2F;&#x2F;文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line"></span><br><span class="line">  b2t: false            &#x2F;&#x2F;返回顶部按钮（只对Pisces | Gemini两种风格有效）</span><br><span class="line"></span><br><span class="line">  scrollpercent: true   &#x2F;&#x2F;返回顶部按钮的百分比</span><br></pre></td></tr></table></figure>
<h1 id="五、头像设置"><a href="#五、头像设置" class="headerlink" title="五、头像设置"></a>五、头像设置</h1><p>   打开主题配置文件_config.yml<br>  只需把你的头像命名为header.jpg（随便命名）保存themes/next/source/images中，在主题配置文件中将avatar的路径名改成你的头像路径就好了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar  头像</span><br><span class="line"># in theme directory(source&#x2F;images): &#x2F;images&#x2F;avatar.gif</span><br><span class="line"># in site  directory(source&#x2F;uploads): &#x2F;uploads&#x2F;avatar.gif</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: &#x2F;images&#x2F;header.jpg #头像保存路径</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true  #设置圆形头像，为了保持美观，尽量使用长宽为1:1的图片</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: false  #鼠标放上面，头像旋转</span><br></pre></td></tr></table></figure></p>
<h1 id="六、设置RSS订阅"><a href="#六、设置RSS订阅" class="headerlink" title="六、设置RSS订阅"></a>六、设置RSS订阅</h1><p>1、先安装 hexo-generator-feed 插件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p>
<p>2、打开<strong>站点配置文件_config.yml</strong>，找到social:下面的RSS去掉注释符号就可以了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RSS: &#x2F;atom.xml || rss</span><br></pre></td></tr></table></figure></p>
<h1 id="七、添加搜索功能"><a href="#七、添加搜索功能" class="headerlink" title="七、添加搜索功能"></a>七、添加搜索功能</h1><p>1、安装 hexo-generator-searchdb 插件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><br>2、打开<strong>站点配置文件config.yml</strong>,找到Local Search在下面将enable改为true就可以。如果没有安装插件的话，搜索功能会实现不了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure></p>
<h1 id="八、添加社交模块"><a href="#八、添加社交模块" class="headerlink" title="八、添加社交模块"></a>八、添加社交模块</h1><p>想要哪个就去掉注释符号，也可以自定义。social_icons是对应的社交图标，<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">更多图标</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: &#96;Key: permalink || icon&#96;</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before &#96;||&#96; delimiter is the target permalink, value after &#96;||&#96; delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || weibo</span><br><span class="line">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || google</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || twitter</span><br><span class="line">  #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname || facebook</span><br><span class="line">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || stack-overflow</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || youtube</span><br><span class="line">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line">  RSS: &#x2F;atom.xml || rss</span><br><span class="line"></span><br><span class="line">social_icons:  #图标显示</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure></p>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官网配置</a><br><a href="https://theme-next.org/docs/" target="_blank" rel="noopener">next主题配置</a><br><a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">图标设置</a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建个人博客（安装与部署）</title>
    <url>/2018/11/25/hexo-build-blog(install&amp;deploy%EF%BC%89/</url>
    <content><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以将生成的网站部署并托管到github上。<br>在搭建博客之前首先需要有一个github账号并且配置了SSH Keys（<a href="https://www.cnblogs.com/zzw731862651/p/9327632.html" target="_blank" rel="noopener">git生成ssh key</a>），还需要安装git、安装node.js和安装hexo。<br><a id="more"></a><br>本篇博客相关安装说明：<br>node版本：Node.js v12.14.0.<br>hexo版本：hexo: 4.2.0<br>主题next版本：NexT.Gemini v7.6.0</p>
<h1 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h1><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h2><p>直接下载git安装到本地，打开cmd输入：git —version<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><br>如果输出git的版本信息说明安装成功。</p>
<h2 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2.安装node.js"></a>2.安装node.js</h2><p>直接下载node.js安装到本地，打开cmd输入：node -v<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><br>如果输出git的版本信息说明安装成功。</p>
<h2 id="3-更换npm源"><a href="#3-更换npm源" class="headerlink" title="3.更换npm源"></a>3.更换npm源</h2><p>npm是node.js的包管理工具，新版的node.js已经集成了npm，同样可以输入:npm -v来测试是否安装成功<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></p>
<ul>
<li>允许用户从npm服务器下载别人编写的第三方包到本地使用。</li>
<li>允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。</li>
<li>允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。<br>更换淘宝镜像：使用cnpm来安装模块，其速度比npm要快。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>在cmd中输入hexo -v检查是否安装成功</p>
<h2 id="5-hexo常用命令"><a href="#5-hexo常用命令" class="headerlink" title="5.hexo常用命令"></a>5.hexo常用命令</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">简写</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">hexo init [folder]</td>
<td style="text-align:center"></td>
<td style="text-align:center">用于新建一个网站，如果后面没有跟folder，hexo会默认在当面的文件建立资源。</td>
</tr>
<tr>
<td style="text-align:center">hexo clean</td>
<td style="text-align:center">hexo cl</td>
<td style="text-align:center">清除缓存文件 (db.json) 和已生成的静态文件 (public)。</td>
</tr>
<tr>
<td style="text-align:center">hexo generate</td>
<td style="text-align:center">hexo g</td>
<td style="text-align:center">生成静态文件</td>
</tr>
<tr>
<td style="text-align:center">hexo server</td>
<td style="text-align:center">hexo s</td>
<td style="text-align:center">启动本地服务器</td>
</tr>
<tr>
<td style="text-align:center">hexo deploy</td>
<td style="text-align:center">hexo d</td>
<td style="text-align:center">部署网站</td>
</tr>
</tbody>
</table>
</div>
<h1 id="三、建站"><a href="#三、建站" class="headerlink" title="三、建站"></a>三、建站</h1><h2 id="1-创建资源"><a href="#1-创建资源" class="headerlink" title="1.创建资源"></a>1.创建资源</h2><p>安装完hexo后，在windows的目录下新建一个文件夹用于存放hexo资源，比如在D:blog/目录下<br>进入到该文件夹的根目录下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure><br>执行完之后再该目录下会生成很多的其他文件。</p>
<h2 id="2-基础配置"><a href="#2-基础配置" class="headerlink" title="2.基础配置"></a>2.基础配置</h2><p><strong>注意：</strong> 区分配置文件_config.yml，一个是根目录下的配置文件，通常叫做站点配置文件，包含hexo本身的配置；另一个是主题下(themes)的配置文件，通常叫做主题配置文件，主要是针对主题的配置。<br>打开站点配置文件_config.yml，配置可以参考官网的<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">教程配置</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文件位置：~&#x2F;_config.yml</span><br><span class="line"># Hexo version: v4.0.0</span><br><span class="line"></span><br><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;configuration.html</span><br><span class="line">## Source: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">## 网站标题、副标题、网站描述、关键词、作者、语言等基本信息的配置</span><br><span class="line">title: 咸鱼翻身</span><br><span class="line">subtitle: Viva La Vida</span><br><span class="line">description: </span><br><span class="line">keywords: </span><br><span class="line">author: Duan Xinyun</span><br><span class="line">language: zh-CN  #语言选择，在themesnext&#x2F;language下，文件名就是可以选择的语言，打开文件可以设置显示内容。</span><br><span class="line">timezone: Asia&#x2F;Shanghai</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">## 博客的网址及文章 URL 结构，默认在根目录</span><br><span class="line">## 如果你想要将博客设定在一个子目录，如 &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;blog&#39;，则将 root 设定为该子目录的名称 &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">## 建议博客的 URL 结构在博客建立初期就规划好，因为当你写的文章被搜索引擎收录以及被读者收藏后，再更改结构，会对你的网站访问造成一定影响</span><br><span class="line">url: https:&#x2F;&#x2F;xinyunduan.github.io&#x2F;</span><br><span class="line">root: &#x2F;</span><br><span class="line">## 详细参数请查看：https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;permalinks.html</span><br><span class="line">## 这里默认的路径太不利于 SEO，建议修改成较短的链接。比如 &#39;year:month:day&#x2F;:title&#x2F;&#39;</span><br><span class="line">## 或者你也可以考虑使用一些插件，直接生成永久链接，如 hexo-abbrlink 插件：https:&#x2F;&#x2F;github.com&#x2F;rozbo&#x2F;hexo-abbrlink</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">## 这里是设定一些基本文件夹的名称，如资源文件夹等。</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads&#x2F;code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">## skip_render 是为了避免在执行 &#39;hexo generate&#39; 命令后将一些你不想转义的文件转成 HTML 格式。</span><br><span class="line">## 比如 README.md，你可以将这些文件名填写在括号内，格式为 [README.md, Post1.md, Post2.md]</span><br><span class="line">skip_render: [README.md]</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">## post_asset_folder 设置为 true 后，当你新建一个 post 的时候，会在同级目录生成一个相同名字的文件夹</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">## 代码高亮设置</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">## 代码自动高亮</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default &#x3D; &#39;&#39;)</span><br><span class="line"># per_page: Posts displayed per page. (0 &#x3D; disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#39;&#39;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">## URL 中的分类和标签「翻译」成英文</span><br><span class="line">## 参见：https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;issues&#x2F;1162</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date &#x2F; Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http:&#x2F;&#x2F;momentjs.com&#x2F;docs&#x2F;#&#x2F;displaying&#x2F;format&#x2F;</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line">######################################</span><br><span class="line">###   以下为我额外添加的参数设定  ######</span><br><span class="line">######################################</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">## Dependency: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-deployer-git</span><br><span class="line">## 设定执行 &#39;hexo deploy&#39; 命令后提交的代码仓库地址</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:xinyunduan&#x2F;xinyunduan.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  </span><br><span class="line"># 推荐文章功能插件，需要同主题配置文件一起设定</span><br><span class="line">## Dependency: https:&#x2F;&#x2F;github.com&#x2F;huiwang&#x2F;hexo-recommended-posts</span><br><span class="line">recommended_posts:</span><br><span class="line">  server: https:&#x2F;&#x2F;api.truelaurel.com #后端推荐服务器地址</span><br><span class="line">  timeoutInMillis: 10000 #服务时长，超过此时长，则使用离线推荐模式</span><br><span class="line">  internalLinks: 5 #内部文章数量</span><br><span class="line">  externalLinks: 0 #外部文章数量</span><br><span class="line">  fixedNumber: true</span><br><span class="line">  autoDisplay: false</span><br><span class="line"></span><br><span class="line"># Aplayer 音乐播放器插件</span><br><span class="line">## Dependency: https:&#x2F;&#x2F;github.com&#x2F;MoePlayer&#x2F;hexo-tag-aplayer</span><br><span class="line">aplayer:</span><br><span class="line">  script_dir: js # Public 目录下脚本目录路径，默认: &#39;assets&#x2F;js&#39;</span><br><span class="line">  style_dir: css # Public 目录下样式目录路径，默认: &#39;assets&#x2F;css&#39;</span><br><span class="line">  #cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  #style_cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.css # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span><br><span class="line">  meting: true # MetingJS 支持</span><br><span class="line">  #meting_api: http:&#x2F;&#x2F;xxx&#x2F;api.php # 自定义 Meting API 地址</span><br><span class="line">  #meting_cdn: http:&#x2F;&#x2F;xxx&#x2F;Meing.min.js # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  asset_inject: true # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span><br><span class="line">  #externalLink: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js # 老版本参数，功能与参数 cdn 相同</span><br><span class="line"></span><br><span class="line"># NexT 主题统计文章字数与阅读时长功能，需要同主题配置文件一起设定,需要安装插件hexo-symbols-count-time --save</span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br></pre></td></tr></table></figure></p>
<h1 id="四、主题安装"><a href="#四、主题安装" class="headerlink" title="四、主题安装"></a>四、主题安装</h1><p>在建站之后，根目录下会有一个themes的文件夹用于存放各种主题，默认的是landscape主题，如果你不喜欢可安装其他的主题，hexo的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">更多主题</a>选择。<br>本文使用的是next主题，也是目前最受欢迎的一个主题，下面我们来安装一下next主题。</p>
<h2 id="1-安装next主题"><a href="#1-安装next主题" class="headerlink" title="1.安装next主题"></a>1.安装next主题</h2><p><a href="https://theme-next.org/" target="_blank" rel="noopener">next官网</a>，原来的旧版本已经停止更新了，为了不必要的麻烦请下载安装6.0版本之后的。<br>这个是next v5版本的，目前已经停止维护了。<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a><br>以下是v6版本及更新版本的，<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><br>之后在themes目录下会生成一个next的主题文件夹。进入themes/next，可以用查看版本数,tag是显示出来的版本号，选择其中一个版本就可以，默认是最新的版本。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag -l #查看版本</span><br><span class="line">git checkout tag</span><br></pre></td></tr></table></figure></p>
<h2 id="2-启用next主题"><a href="#2-启用next主题" class="headerlink" title="2.启用next主题"></a>2.启用next主题</h2><p>打开站点配置配置文件_config.yml文件，找到theme字段，将值改成next。注：冒号后面空一个，该值的名称与theme目录下的主题文件夹名称一致。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3.启动服务"></a>3.启动服务</h2><p>每次切换主题之后需要清除hexo的缓存<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 清楚缓存</span><br><span class="line">hexo clean</span><br><span class="line">#生成静态文件</span><br><span class="line">hexo g</span><br><span class="line">#启动本地服务器</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>在终端可以看到：INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.打开浏览器便可以访问博客了。</p>
<h1 id="五、部署到github"><a href="#五、部署到github" class="headerlink" title="五、部署到github"></a>五、部署到github</h1><h2 id="安装部署工具"><a href="#安装部署工具" class="headerlink" title="安装部署工具"></a>安装部署工具</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h2 id="github新建一个repository"><a href="#github新建一个repository" class="headerlink" title="github新建一个repository"></a>github新建一个repository</h2><p>repository的格式为：username.github.io<br><strong>注：一定是username.github.io，uername与前面的owner保持一致，否则访问不了。</strong></p>
<h2 id="添加部署信息"><a href="#添加部署信息" class="headerlink" title="添加部署信息"></a>添加部署信息</h2><p>打开站点配置文件_config.yml，翻到最底部找到deploy节点编辑：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:xinyunduan&#x2F;xinyunduan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p>
<h2 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h2><p>hexo d -g<br>以后每次写完文章之后一次执行如下命令就可以发布更新了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><br>然后在浏览器输入xinyunduan.github.io就可以访问你的个人博客了。<br>如果不能正常显示，请再次注意域名的username与github的username是否一致。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>执行到这里，已经搭建了一个基本的博客框架了，后期再根据个人需求进一步优化next主题。接下来一篇分享我的主题优化过程。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
</search>
